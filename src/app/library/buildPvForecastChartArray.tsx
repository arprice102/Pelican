import { format } from 'date-fns';
import { ForecastResponse, LogEntry } from '../components/PvForecast.tsx';

/*
** Takes a PV JSON object generated by the Solcast API and converts into a formatted
** array of LogEntry objects compatible with the Recharts library.
**
** Solcast API available through https://www.solcast.com/
**
** @json { ForecastResponse } Array of forecast data entries
*/
export default function buildPvForecastChartArray(json: ForecastResponse) {
    // Initialize an empty array to hold the LogEntry objects.
    let pvArray: LogEntry[] = [];

    // Iterate through each forecast entry in the forecasts array.
    json.forecasts.forEach(forecastLog => {
        // Create a new LogEntry object with undefined values for now.
        let logEntry: LogEntry = {
            date: undefined,
            pv10: undefined,
            pv: undefined,
            pv90: undefined
        };

        // Iterate through each key in the current forecastLog (forecast entry).
        for (let key in forecastLog) {
            // If the key is "period_end", format the date string and assign it to logEntry.date.
            if (key === "period_end") {
                // Format the date using the desired pattern ('HH:mm MMM d').
                const niceDate = format(new Date(forecastLog[key]), 'HH:mm MMM d');
                logEntry.date = niceDate;
            }
            // If the key is "pv_estimate10", assign the corresponding value to logEntry.pv10.
            if (key === "pv_estimate10") logEntry.pv10 = forecastLog[key];
            // If the key is "pv_estimate", assign the corresponding value to logEntry.pv.
            if (key === "pv_estimate") logEntry.pv = forecastLog[key];
            // If the key is "pv_estimate90", assign the corresponding value to logEntry.pv90.
            if (key === "pv_estimate90") logEntry.pv90 = forecastLog[key];
        }

        // Push the completed logEntry object into the pvArray.
        pvArray.push(logEntry);
    });

    // Return formatted array
    return pvArray;
}
